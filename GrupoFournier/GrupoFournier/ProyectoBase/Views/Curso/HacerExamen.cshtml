@model Entities.Curso
@using MvcCustomHelpers.Razor
@{
    ViewBag.Title = "Examen";
}
<style>
    .formularioSimple .box {
        border-left: 1px solid #d2d6de;
        border-right: 1px solid #d2d6de;
    }

    .radiosOpcionesContainer {
        margin-left: 0;
        margin-right: 0;
        margin-top: 20px;
    }

        .radiosOpcionesContainer .row {
            margin-left: 10px;
            margin-right: 10px;
        }

    .buttonEnviarExamen {
        cursor: pointer;
    }

    .colorVerde{
        color : green;
        font-weight: bold;
    }
    .colorRojo{
        color: red;
        font-weight: bold;
    }
</style>
<div class="box box-info box-form">
    <div class="tituloVista row">
        <div class="col-md-12">
            <i class="fa fa-file-text-o fa-fw"></i>
            @ViewBag.Title
        </div>
    </div>
    <div class="formularioSimple">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "examenForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.EntityID)

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @foreach (var pregunta in Model.Preguntas.OrderBy(x => x.Orden))
                {
                    <div class="box box-danger box-form">
                        <div class="row">
                            <div class="col-md-12" style="font-size: 16px; font-weight: bold">
                                @pregunta.Titulo
                            </div>
                        </div>
                        <div class="row radiosOpcionesContainer" data-pregunta-id="@pregunta.EntityID">
                            @foreach (var opcion in pregunta.Opciones)
                            {
                                <div class="row">
                                    <div class="col-md-2">
                                        <input value="@opcion.EntityID" data-pregunta-id="@pregunta.EntityID" type="radio" name="radioPregunta-@pregunta.EntityID" />
                                    </div>
                                    <div class="col-md-10">
                                        <span class="textoOpcion">@opcion.Descripcion</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <a class="btn btn-success buttonEnviarExamen">
                            <i class="fa fa-floppy-o fa-fw"></i>Enviar
                        </a>
                    </div>
                </div>

            </div>
        }
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var puedeHacerExamen = true;

        // -- Click en enviar examen
        $('.buttonEnviarExamen').click(function () {
            if(puedeHacerExamen)
            {
                var preguntasContestadas = true;
                // -- Por cada grupo de radios
                $('.radiosOpcionesContainer').each(function () {
                    // -- Obtengo el nombre del radio
                    var radioName = $(this).find('input').attr('name');
                    // -- Valido que este contestada la pregunta
                    if ($('input[name=' + radioName + ']:checked').val() == undefined) {
                        preguntasContestadas = false;
                    }
                });
                // -- Si todas estan contestadas
                if (preguntasContestadas) {
                    // -- Array de preguntas
                    var preguntas = [];
                    // -- Por cada grupo de radios
                    $('.radiosOpcionesContainer').each(function () {
                        var pregunta = new Object();
                        // -- Obtengo id de la pregunta
                        pregunta.EntityID = Number($(this).attr('data-pregunta-id'));
                        // -- Obtengo el nombre del radio
                        var radioName = $(this).find('input').attr('name');
                        // -- Valido que este contestada la pregunta
                        var radioElegido = Number($('input[name=' + radioName + ']:checked').val());
                        // -- Asigno la opcion elegida
                        pregunta.Opciones = [];
                        var opcion = new Object();
                        opcion.EntityID = radioElegido;
                        pregunta.Opciones.push(opcion);
                        // -- Agrego la pregunta
                        preguntas.push(pregunta);
                    });
                    // -- Llamo al ajax
                    // -- Llamo al ajax
                    BloquearContenido();
                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: '@Url.Action("HacerExamen", "Curso")',
                        data: { "preguntas": preguntas, "cursoID" : @Model.EntityID },
                        success: function (data) {
                            DesbloquearContenido();
                            // -- Muestro mensaje
                            AlertSuccess(data.Mensaje, "Examen enviado");
                            // -- Pongo en rojo las contestadas(las que esten bien luego quedaran verdes)
                            $('input:checked').each(function(){
                                $(this).parent().parent().find('.textoOpcion').addClass('colorRojo');
                            });
                            for(var i=0; i<data.Preguntas.length; i++)
                            {
                                for(var j=0; j<data.Preguntas[i].Opciones.length; j++)
                                {
                                    if(data.Preguntas[i].Opciones[j].Correcta==true)
                                    {
                                        $('input[data-pregunta-id=' + data.Preguntas[i].EntityID + '][value='+ data.Preguntas[i].Opciones[j].EntityID +']').parent().parent().find('.textoOpcion').addClass('colorVerde').removeClass('colorRojo');
                                    }
                                }
                                
                            }
                            // -- Pongo en false para que no pueda hacer examen
                            puedeHacerExamen= false;
                            // -- Oculto boton enviar
                            $('.buttonEnviarExamen').hide();
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            DesbloquearContenido();
                            AlertError("Ha ocurrido un error y no se guardo el examen realizado", "Advertencia");
                        }
                    });


                }
                else {
                    AlertError('Debe contestar todas las preguntas', 'Alerta');
                }
            }
            else
            {
                AlertError('Ya realizo el examen', 'Alerta');
            }
        });
    </script>
}



