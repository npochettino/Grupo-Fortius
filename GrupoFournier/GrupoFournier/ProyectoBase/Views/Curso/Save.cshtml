@model Entities.Curso
@using MvcCustomHelpers.Razor
<style>
    .columnaTextBusqueda {
        padding-right: 0;
    }

    .columnaIconoBusqueda {
        padding-left: 0;
    }

    .formularioSimple .box {
        border-left: 1px solid #d2d6de;
        border-right: 1px solid #d2d6de;
    }
    
    .contenedorBotones{
        margin-top: 15px;
    }

</style>
@Styles.Render("~/bundles/Content/dataTables")
<div class="box box-info box-form">
    <div class="tituloVista row">
        <div class="col-md-12">
            <i class="fa fa-users fa-fw"></i>
            @ViewBag.Title
        </div>
    </div>
    <div class="formularioSimple">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "cursoCreateForm", autocomplete = "false", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.EntityID)
            @Html.HiddenFor(model => model.Activo)
            @Html.HiddenFor(model => model.Cargado)
            @Html.HiddenFor(model => model.FechaAlta)
            @Html.HiddenFor(model => model.FilesFolder)
            @Html.HiddenFor(model => model.Imagen)

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(x => x.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Html, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Html, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("NombreHTML", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RolMinimo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @DropDownListHelper.DropDownRolParaCursos(Html, false)
                    </div>
                </div>
                @if (Model.EntityID == 0)
                {
                    <div class="form-group">
                        @Html.Label("Archivo", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <input type="file" name="Archivo" id="Archivo" class="form-control" accept=".zip" />
                            @Html.ValidationMessage("Archivo", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.Label("Cargar Imagen", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="file" name="ImagenCurso" id="ImagenCurso" class="form-control" accept=".jpg,.jpeg,.gif,.png" />
                        @Html.ValidationMessage("ImagenCurso", new { @class = "text-danger" })
                    </div>
                </div>
                @if (Model.EntityID != 0 && Model.Imagen != null)
                {
                    <div class="form-group contenedorImagenActual">
                        @Html.Label("Imagen Actual", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <img src="~/Imagenes/ImagenesCursos/@Model.Imagen" height="140" width="140" class="img-rounded" />
                            <a onclick="MostrarModalBorrarImagen()"><span class="btn btn-danger"><i class="fa fa-fw fa-minus-circle"></i> Borrar</span></a>
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9 contenedorBotones">
                        @FormButtonsHelpers.FormButtonBackToList("Curso")
                        @FormButtonsHelpers.FormButtonPostSave()
                    </div>
                </div>
            </div>
            }
    </div>
</div>

@*Modal de validación para "Borrar Imagen"*@
<div id="modalBorrarImagen" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Borrar Imagen</h4>
            </div>
            <div class="modal-body" id="modal-body-borrar-imagen">
                <p>¿Está seguro que desea borrar la imagen actual?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>
                <button type="button" id="buttonBorrarImagen" class="btn btn-danger">Borrar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/Scripts/dataTables")
<script>
    // Muestra el modal para borrar imagen
    function MostrarModalBorrarImagen()
    {
        $('#modalBorrarImagen').modal('show');
    };

    $('#buttonBorrarImagen').click(function ()
    {
        $(".contenedorImagenActual").hide();
        $("#Imagen").removeAttr("value");
        $('#modalBorrarImagen').modal('hide');
    });
</script>
}