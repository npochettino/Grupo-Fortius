@model Entities.Rol
@{
    ViewBag.Title = "Módulos del Rol";
}
@using MvcCustomHelpers.Razor
@Styles.Render("~/bundles/Content/TreeView")
<div class="box box-info box-form">
    <div class="tituloVista row">
        <div class="col-md-12">
            <i class="fa fa-list-ul fa-fw"></i>
            Módulos del Rol
        </div>
        <div class="col-md-12">
            Perfil: @Model.Nombre
        </div>
    </div>
    <div class="formularioSimple">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "rolModules" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EntityID)
                @Html.HiddenFor(model => model.Nombre)
                <div class="form-group">
                    @Html.LabelFor(model => model.Modulos, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Hidden("ModulesID")
                        @TreeViewHelper.TreeView()
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @FormButtonsHelpers.FormButtonBackToList("Rol")
                        @FormButtonsHelpers.FormButtonPostSave()
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Scripts/TreeView")
    <script type="text/javascript">
        //Carga el arbol
        cargarNodos(['@Html.Raw(ViewBag.tree)'], "");

        $('.aciTree i').addClass('fa fa-circle treeActionIcon');

        //Obtiene items checkeados y los asigna a un input antes de realizar el POST
        $('form#rolModules').submit(function (e) {
            $('#ModulesID').val(RecuperarCheckedChecks());
        })
    </script>
}