@model Entities.Usuario
@{
    ViewBag.Title = "Cambiar Contraseña";
}
@using MvcCustomHelpers.Razor
<style>
    .columnaTextBusqueda {
        padding-right: 0;
    }

    .columnaIconoBusqueda {
        padding-left: 0;
    }

    .formularioSimple .box {
        border-left: 1px solid #d2d6de;
        border-right: 1px solid #d2d6de;
    }
</style>
@Styles.Render("~/bundles/Content/dataTables")
<div class="box box-info box-form">
    <div class="tituloVista row">
        <div class="col-md-12">
            <i class="fa fa-users fa-fw"></i>
            @ViewBag.Title
        </div>
    </div>
    <div class="formularioSimple">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.EntityID)
            @Html.Hidden("isCurrentUser", (bool)ViewBag.isCurrentUser)
            <div class="form-horizontal">
                @*Si es el usuario logueado*@
                @if (ViewBag.isCurrentUser)
                {
                    //Pregunto contraseña actual
                    <div class="form-group">
                        @Html.Label("Contraseña Actual", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Nueva Contraseña", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.PasswordFor(model => model.NewPassword, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Repita Contraseña", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.PasswordFor(model => model.NewPasswordRepeat, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPasswordRepeat, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    //Si es un usuario cualquiera que se edita desde administracion
                    //La contraseña se genera en el controlador y se ponen los campos como readonly
                    @Html.HiddenFor(x => x.Password);
                    <div class="form-group">
                        @Html.Label("Nueva Contraseña", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.NewPassword, htmlAttributes: new { @class = "form-control", @readonly = "true" })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.HiddenFor(x => x.NewPasswordRepeat);
                }
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        @if (!ViewBag.isCurrentUser)
                        {
                            if (!ViewBag.isEmpresa)
                            {
                                @FormButtonsHelpers.FormButtonBackToList("Usuario")
                            }
                            else
                            {
                                <a href="/Usuario/IndexEmpresa"><span class="btn btn-danger"><i class="fa fa-arrow-circle-left fa-fw"></i>Volver a la lista</span></a>
                            }
                        }
                        @FormButtonsHelpers.FormButtonPostSave()
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Scripts/dataTables")
}
